// Lightweight fallback fingerprinting (based on browser-signature library)
(function(global) {
    'use strict';
    
    function browserSignature() {
        try {
            const mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;
            const userAgentLength = navigator.userAgent.length;
            const screenSignature = screen.width + screen.height + screen.colorDepth;
            const timezoneOffset = new Date().getTimezoneOffset();
            
            const signature = mimeTypesLength + 
                             userAgentLength + 
                             screenSignature + 
                             timezoneOffset + 
                             (navigator.hardwareConcurrency || 0);
            
            // Convert to base64-like string
            return btoa(signature.toString() + Date.now().toString()).slice(0, 32);
        } catch (e) {
            return 'fallback_' + Math.random().toString(36).substring(2, 15);
        }
    }
    
    // Make available globally
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = browserSignature;
    } else {
        global.browserSignature = browserSignature;
    }
})(typeof window !== 'undefined' ? window : global);
